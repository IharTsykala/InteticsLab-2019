{"version":3,"sources":["ClientDataCards/index.js","AddClients/AddClientCard.js","AddClients/EditClientCard.js","App.js","index.js"],"names":["ClientCardsData","props","console","log","currentClient","length","map","user","key","id","firstName","lastName","dateOfBirth","address","phone","email","car","make","model","year","vin","order","date","orderAmount","orderStatus","onClick","editRow","deleteUser","className","colSpan","AddClients","initialFormState","useState","setUser","flagAdd","handleInputChange","event","target","name","value","onSubmit","preventDefault","setCurrentClient","clientsList","forEach","client","addUser","type","onChange","EditClientCard","currentUser","useEffect","updateUser","setEditing","App","users","setUsers","setCurrentUser","editing","updatedUser","clientNew","flagCompare","clientData","Object","assign","i","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ce72768.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ClientCardsData = props => {\r\n  console.log(props.currentClient);\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>Name</div>\r\n        <div>Username</div>\r\n        <div>dateOfBirth</div>\r\n        <div>address</div>\r\n        <div>phone</div>\r\n        <div>email</div>\r\n\r\n        <div>make</div>\r\n        <div>model</div>\r\n        <div>year</div>\r\n        <div>vin</div>\r\n\r\n        <div>date</div>\r\n        <div>orderAmount</div>\r\n        <div>orderStatus</div>\r\n      </div>\r\n\r\n      {props.currentClient.length > 0 ? (\r\n        props.currentClient.map(user => (\r\n          <div key={user.id}>\r\n            <div>{user.firstName}</div>\r\n            <div>{user.lastName}</div>\r\n            <div>{user.dateOfBirth}</div>\r\n            <div>{user.address}</div>\r\n            <div>{user.phone}</div>\r\n            <div>{user.email}</div>\r\n            <div></div>\r\n            <div>{user.car[0].make}</div>\r\n            <div>{user.car[0].model}</div>\r\n            <div>{user.car[0].year}</div>\r\n            <div>{user.car[0].vin}</div>\r\n\r\n            <div>{user.car[0].order.date}</div>\r\n            <div>{user.car[0].order.orderAmount}</div>\r\n            <div>{user.car[0].order.orderStatus[0]}</div>\r\n\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  props.editRow(user);\r\n                }}\r\n                // className=\"button muted-button\"\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => props.deleteUser(user.firstName, user.lastName)}\r\n                className=\"button muted-button\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div>\r\n          <div colSpan={3}>No users</div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientCardsData;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddClients = props => {\r\n  const initialFormState = {\r\n    id: null,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dateOfBirth: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    car: [\r\n      {\r\n        make: \"\",\r\n        model: \"\",\r\n        year: \"\",\r\n        vin: \"\",\r\n        order: {\r\n          date: \"\",\r\n          orderAmount: \"\",\r\n          orderStatus: [\"complied\", \"in progress\", \"canceled\"]\r\n        }\r\n      }\r\n    ]\r\n  };\r\n  const [user, setUser] = useState(initialFormState);\r\n  let flagAdd = true;\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault();\r\n        if (!user.firstName || !user.lastName) return;\r\n        props.setCurrentClient(user);\r\n        props.clientsList.forEach(client => {\r\n          if (\r\n            client.firstName === user.firstName &&\r\n            client.lastName === user.lastName\r\n          )\r\n            flagAdd = false;\r\n          return;\r\n        });\r\n        if (flagAdd) {\r\n          props.addUser(user);\r\n          setUser(initialFormState);\r\n        }\r\n      }}\r\n    >\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"firstName\"\r\n        value={user.firstName}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Username</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"lastName\"\r\n        value={user.lastName}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button>Add new user</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddClients;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditClientCard = props => {\r\n  const [user, setUser] = useState(props.currentUser);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUser(props.currentUser);\r\n  }, [props]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault();\r\n\r\n        props.updateUser(user.id, user);\r\n      }}\r\n    >\r\n      <label>firstName</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"firstName\"\r\n        value={user.firstName}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>lastName</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"lastName\"\r\n        value={user.lastName}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>dateOfBirth</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"dateOfBirth\"\r\n        value={user.dateOfBirth}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>address</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"address\"\r\n        value={user.address}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>phone</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"phone\"\r\n        value={user.phone}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>email</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"email\"\r\n        value={user.email}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>make</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"make\"\r\n        value={user.car[0].make}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>model</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"model\"\r\n        value={user.car[0].model}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>year</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"year\"\r\n        value={user.car[0].year}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>vin</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"vin\"\r\n        value={user.car[0].vin}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>date</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"date\"\r\n        value={user.car[0].order.date}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>orderAmount</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"orderAmount\"\r\n        value={user.car[0].order.orderAmount}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>orderStatus</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"orderStatus\"\r\n        value={user.car[0].order.orderStatus}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button>Update user</button>\r\n      <button\r\n        onClick={() => props.setEditing(false)}\r\n        className=\"button muted-button\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditClientCard;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport ClientCardsData from \"./ClientDataCards/index\";\r\nimport AddClients from \"./AddClients/AddClientCard\";\r\nimport EditClientCards from \"./AddClients/EditClientCard\";\r\n\r\nconst App = () => {\r\n  const usersData = [\r\n    {\r\n      id: 1,\r\n      firstName: \"Tania\",\r\n      lastName: \"Brown\",\r\n      dateOfBirth: \"21.09.1984\",\r\n      address: \"Minsk\",\r\n      phone: \"+123456789\",\r\n      email: \"123@tut.by\",\r\n      car: [\r\n        {\r\n          make: \"Honda\",\r\n          model: \"Civic\",\r\n          year: \"2015\",\r\n          vin: \"123456789\",\r\n          order: {\r\n            date: \"21.09.2019\",\r\n            orderAmount: \"100\",\r\n            orderStatus: [\"complied\", \"in progress\", \"canceled\"]\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      firstName: \"Tania2\",\r\n      lastName: \"Brown\",\r\n      dateOfBirth: \"21.09.1984\",\r\n      address: \"Minsk\",\r\n      phone: \"+123456789\",\r\n      email: \"123@tut.by\",\r\n      car: [\r\n        {\r\n          make: \"Honda\",\r\n          model: \"Civic\",\r\n          year: \"2015\",\r\n          vin: \"123456789\",\r\n          order: {\r\n            date: \"21.09.2019\",\r\n            orderAmount: \"100\",\r\n            orderStatus: [\"complied\", \"in progress\", \"canceled\"]\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      firstName: \"Tania3\",\r\n      lastName: \"Brown\",\r\n      dateOfBirth: \"21.09.1984\",\r\n      address: \"Minsk\",\r\n      phone: \"+123456789\",\r\n      email: \"123@tut.by\",\r\n      car: [\r\n        {\r\n          make: \"Honda\",\r\n          model: \"Civic\",\r\n          year: \"2015\",\r\n          vin: \"123456789\",\r\n          order: {\r\n            date: \"21.09.2019\",\r\n            orderAmount: \"100\",\r\n            orderStatus: [\"complied\", \"in progress\", \"canceled\"]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const [users, setUsers] = useState(usersData);\r\n\r\n  const addUser = user => {\r\n    user.id = users.length + 1;\r\n    setUsers([...users, user]);\r\n  };\r\n\r\n  const currentInputClient = {\r\n    id: null,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dateOfBirth: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    car: [\r\n      {\r\n        make: \"\",\r\n        model: \"\",\r\n        year: \"\",\r\n        vin: \"\",\r\n        order: {\r\n          date: \"\",\r\n          orderAmount: \"\",\r\n          orderStatus: [\"complied\", \"in progress\", \"canceled\"]\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const [currentClient, setCurrentUser] = useState([currentInputClient]);\r\n\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const compareDataClients = client => {\r\n    let clientNew = {};\r\n    let flagCompare = false;\r\n    users.forEach(clientData => {\r\n      if (\r\n        clientData.firstName === client.firstName &&\r\n        clientData.lastName === client.lastName\r\n      ) {\r\n        clientNew = Object.assign({}, clientData);\r\n        flagCompare = true;\r\n        setCurrentUser([clientNew]);\r\n      }\r\n    });\r\n    if (flagCompare) {\r\n      setCurrentUser([clientNew]);\r\n    } else {\r\n      setCurrentUser([client]);\r\n    }\r\n  };\r\n\r\n  const deleteUser = (firstName, lastName) => {\r\n    setEditing(false);\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (firstName === users[i].firstName && lastName === users[i].lastName) {\r\n        users.splice(i, 1);\r\n      }\r\n    }\r\n    setCurrentUser({});\r\n  };\r\n\r\n  const editRow = client => {\r\n    setEditing(true);\r\n\r\n    setCurrentUser(client);\r\n  };\r\n\r\n  const updateUser = (id, updatedUser) => {\r\n    setEditing(false);\r\n    setUsers(users.map(user => (user.id === id ? updatedUser : user)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>InteticsLab 2019</h1>\r\n      <div className=\"main\">\r\n        <div className=\"flex-large\">\r\n          {editing ? (\r\n            <div>\r\n              <h2>Edit user</h2>\r\n              <EditClientCards\r\n                editing={editing}\r\n                setEditing={setEditing}\r\n                currentUser={currentClient}\r\n                updateUser={updateUser}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2>Add user</h2>\r\n              <AddClients\r\n                addUser={addUser}\r\n                clientsList={users}\r\n                setCurrentClient={compareDataClients}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        ;\r\n        <div className=\"clientCards\">\r\n          <h2>View users</h2>\r\n          <ClientCardsData\r\n            currentClient={currentClient}\r\n            editRow={editRow}\r\n            deleteUser={deleteUser}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}