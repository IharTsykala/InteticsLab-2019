{"version":3,"sources":["ClientDataCards/index.js","AddClients/AddClientCard.js","AddClients/EditClientCard.js","App.js","index.js"],"names":["ClientCardsData","props","className","currentClient","length","map","user","key","id","firstName","lastName","dateOfBirth","address","phone","email","car","make","model","year","vin","order","date","orderAmount","orderStatus","onClick","editRow","deleteUser","colSpan","AddClients","initialFormState","useState","setUser","flagAdd","handleInputChange","event","target","name","value","onSubmit","preventDefault","setCurrentClient","clientsList","forEach","client","addUser","type","onChange","EditClientCard","currentUser","specificationCar","setCar","characteristicOrder","setOrder","handleInputChangeCar","handleInputChangeOrder","useEffect","updateUser","setEditing","App","users","setUsers","setCurrentUser","editing","updatedUser","clientNew","flagCompare","clientData","Object","assign","i","splice","ReactDOM","render","document","getElementById"],"mappings":"0UAsEeA,G,YAlES,SAAAC,GACtB,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,aACb,+CACA,0CACA,4CACA,wCACA,sCACA,sCAEA,qCACA,sCACA,qCACA,oCAEA,qCACA,4CACA,6CAGDD,EAAME,cAAcC,OAAS,EAC5BH,EAAME,cAAcE,IAAI,SAAAC,GAAI,OAC1B,yBAAKC,IAAKD,EAAKE,GAAIN,UAAU,aAC3B,6BAAMI,EAAKG,WACX,6BAAMH,EAAKI,UACX,6BAAMJ,EAAKK,aACX,6BAAML,EAAKM,SACX,6BAAMN,EAAKO,OACX,6BAAMP,EAAKQ,OACX,8BACA,6BAAMR,EAAKS,IAAI,GAAGC,MAClB,6BAAMV,EAAKS,IAAI,GAAGE,OAClB,6BAAMX,EAAKS,IAAI,GAAGG,MAClB,6BAAMZ,EAAKS,IAAI,GAAGI,KAElB,6BAAMb,EAAKS,IAAI,GAAGK,MAAMC,MACxB,6BAAMf,EAAKS,IAAI,GAAGK,MAAME,aACxB,6BAAMhB,EAAKS,IAAI,GAAGK,MAAMG,aAExB,yBAAKrB,UAAU,cACb,4BACEsB,QAAS,WACPvB,EAAMwB,QAAQnB,KAFlB,QAOA,4BACEkB,QAAS,kBAAMvB,EAAMyB,WAAWpB,EAAKG,UAAWH,EAAKI,WACrDR,UAAU,uBAFZ,cAUN,6BACE,yBAAKyB,QAAS,GAAd,gB,yOC3DV,IA+EeC,EA/EI,SAAA3B,GACjB,IAAM4B,EAAmB,CACvBrB,GAAI,KACJC,UAAW,GACXC,SAAU,GACVC,YAAa,GACbC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,IAAK,CACH,CACEC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,MAAO,CACLC,KAAM,GACNC,YAAa,GACbC,YAAa,OAlBK,EAuBFO,mBAASD,GAvBP,mBAuBnBvB,EAvBmB,KAuBbyB,EAvBa,KAwBtBC,GAAU,EAERC,EAAoB,SAAAC,GAAU,IAAD,EACTA,EAAMC,OAAtBC,EADyB,EACzBA,KAAMC,EADmB,EACnBA,MAEdN,E,qVAAQ,CAAD,GAAMzB,EAAN,eAAa8B,EAAOC,MAG7B,OACE,0BACEC,SAAU,SAAAJ,GACRA,EAAMK,iBACDjC,EAAKG,WAAcH,EAAKI,WAC7BT,EAAMuC,iBAAiBlC,GACvBL,EAAMwC,YAAYC,QAAQ,SAAAC,GAEtBA,EAAOlC,YAAcH,EAAKG,WAC1BkC,EAAOjC,WAAaJ,EAAKI,WAEzBsB,GAAU,KAGVA,IACF/B,EAAM2C,QAAQtC,GACdyB,EAAQF,OAIZ,6CACA,2BACEgB,KAAK,OACLT,KAAK,YACLC,MAAO/B,EAAKG,UACZqC,SAAUb,IAEZ,4CACA,2BACEY,KAAK,OACLT,KAAK,WACLC,MAAO/B,EAAKI,SACZoC,SAAUb,IAEZ,8CACA,gJAIA,uBAAG/B,UAAU,WAAb,kF,yjBCvEN,IA4Je6C,EA5JQ,SAAA9C,GAAU,IAAD,EACN6B,mBAAS7B,EAAM+C,aADT,mBACvB1C,EADuB,KACjByB,EADiB,KAGxBhB,EAAMT,EAAKS,IAAI,GAHS,EAIKe,mBAASf,GAJd,mBAIvBkC,EAJuB,KAILC,EAJK,KAMxB9B,EAAQ6B,EAAiB7B,MAND,EAOUU,mBAASV,GAPnB,mBAOvB+B,EAPuB,KAOFC,EAPE,KASxBnB,EAAoB,SAAAC,GAAU,IAAD,EACTA,EAAMC,OAAtBC,EADyB,EACzBA,KAAMC,EADmB,EACnBA,MAEdN,EAAQ,KAAKzB,EAAN,eAAa8B,EAAOC,MAGvBgB,EAAuB,SAAAnB,GAAU,IAAD,EACZA,EAAMC,OAAtBC,EAD4B,EAC5BA,KAAMC,EADsB,EACtBA,MAEda,EAAO,KAAKD,EAAN,eAAyBb,EAAOC,KACtCN,EAAQ,SAAAzB,GAAI,YACPA,EADO,CAEVS,IAAK,CAAC,KAAKT,EAAKS,IAAI,GAAf,eAAoBqB,EAAOC,UAI9BiB,EAAyB,SAAApB,GAAU,IAAD,EACdA,EAAMC,OAAtBC,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,MAEde,EAAS,KAAKD,EAAN,eAA4Bf,EAAOC,KAC3CN,EAAQ,SAAAzB,GAAI,YACPA,EADO,CAEVS,IAAK,CAAC,KAAKT,EAAKS,IAAI,GAAf,CAAmBK,MAAM,KAAMd,EAAKS,IAAI,GAAGK,MAAnB,eAA2BgB,EAAOC,YAQnE,OAJAkB,oBAAU,WACRxB,EAAQ9B,EAAM+C,cACb,CAAC/C,IAGF,0BACEC,UAAU,WACVoC,SAAU,SAAAJ,GACRA,EAAMK,iBAENtC,EAAMuD,WAAWlD,EAAKE,GAAIF,KAG5B,4CACA,2BACEuC,KAAK,OACLT,KAAK,YACLC,MAAO/B,EAAKG,UACZqC,SAAUb,IAEZ,2CACA,2BACEY,KAAK,OACLT,KAAK,WACLC,MAAO/B,EAAKI,SACZoC,SAAUb,IAEZ,8CACA,2BACEY,KAAK,OACLT,KAAK,cACLC,MAAO/B,EAAKK,YACZmC,SAAUb,IAEZ,0CACA,2BACEY,KAAK,OACLT,KAAK,UACLC,MAAO/B,EAAKM,QACZkC,SAAUb,IAEZ,wCACA,2BACEY,KAAK,OACLT,KAAK,QACLC,MAAO/B,EAAKO,MACZiC,SAAUb,IAEZ,wCACA,2BACEY,KAAK,OACLT,KAAK,QACLC,MAAO/B,EAAKQ,MACZgC,SAAUb,IAEZ,uCACA,2BACEY,KAAK,OACLT,KAAK,OACLC,MAAOY,EAAiBjC,KACxB8B,SAAUO,IAEZ,wCACA,2BACER,KAAK,OACLT,KAAK,QACLC,MAAOY,EAAiBhC,MACxB6B,SAAUO,IAEZ,uCACA,2BACER,KAAK,OACLT,KAAK,OACLC,MAAOY,EAAiB/B,KACxB4B,SAAUO,IAEZ,sCACA,2BACER,KAAK,OACLT,KAAK,MACLC,MAAOY,EAAiB9B,IACxB2B,SAAUO,IAEZ,uCACA,2BACER,KAAK,OACLT,KAAK,OACLC,MAAOc,EAAoB9B,KAC3ByB,SAAUQ,IAEZ,8CACA,2BACET,KAAK,OACLT,KAAK,cACLC,MAAOc,EAAoB7B,YAC3BwB,SAAUQ,IAEZ,8CACA,2BACET,KAAK,OACLT,KAAK,cACLC,MAAOc,EAAoB5B,YAC3BuB,SAAUQ,IAEZ,4BACE,4BACE,uDAEF,4BACE,4BACE9B,QAAS,kBAAMvB,EAAMwD,YAAW,IAChCvD,UAAU,uBAFZ,cC4CKwD,EAzLH,WACV,IADgB,EAsEU5B,mBArER,CAChB,CACEtB,GAAI,EACJC,UAAW,QACXC,SAAU,QACVC,YAAa,aACbC,QAAS,QACTC,MAAO,aACPC,MAAO,aACPC,IAAK,CACH,CACEC,KAAM,QACNC,MAAO,QACPC,KAAM,OACNC,IAAK,YACLC,MAAO,CACLC,KAAM,aACNC,YAAa,MACbC,YAAa,eAKrB,CACEf,GAAI,EACJC,UAAW,SACXC,SAAU,QACVC,YAAa,aACbC,QAAS,QACTC,MAAO,aACPC,MAAO,aACPC,IAAK,CACH,CACEC,KAAM,QACNC,MAAO,QACPC,KAAM,OACNC,IAAK,YACLC,MAAO,CACLC,KAAM,aACNC,YAAa,MACbC,YAAa,eAKrB,CACEf,GAAI,EACJC,UAAW,SACXC,SAAU,QACVC,YAAa,aACbC,QAAS,QACTC,MAAO,aACPC,MAAO,aACPC,IAAK,CACH,CACEC,KAAM,QACNC,MAAO,QACPC,KAAM,OACNC,IAAK,YACLC,MAAO,CACLC,KAAM,aACNC,YAAa,MACbC,YAAa,iBA/DP,mBAsEToC,EAtES,KAsEFC,EAtEE,OAoGwB9B,mBAAS,CAvBtB,CACzBtB,GAAI,KACJC,UAAW,GACXC,SAAU,GACVC,YAAa,GACbC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,IAAK,CACH,CACEC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,MAAO,CACLC,KAAM,GACNC,YAAa,GACbC,YAAa,SA9FL,mBAoGTpB,EApGS,KAoGM0D,EApGN,OAsGc/B,oBAAS,GAtGvB,mBAsGTgC,EAtGS,KAsGAL,EAtGA,KAkJhB,OACE,yBAAKvD,UAAU,aACb,wBAAIA,UAAU,SAAd,oBACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACZ4D,EACC,6BACE,2CACA,kBAAC,EAAD,CACEL,WAAYA,EACZT,YAAa7C,EACbqD,WAhBK,SAAChD,EAAIuD,GACtBN,GAAW,GACXG,EAASD,EAAMtD,IAAI,SAAAC,GAAI,OAAKA,EAAKE,KAAOA,EAAKuD,EAAczD,SAkBnD,6BACE,0CACA,kBAAC,EAAD,CACEsC,QA5FE,SAAAtC,GACdA,EAAKE,GAAKmD,EAAMvD,OAAS,EACzBwD,EAAS,GAAD,mBAAKD,GAAL,CAAYrD,MA2FRmC,YAAakB,EACbnB,iBA9Da,SAAAG,GACzB,IAAIqB,EAAY,GAEZC,GAAc,EAElBN,EAAMjB,QAAQ,SAAAwB,GAEVA,EAAWzD,YAAckC,EAAOlC,WAChCyD,EAAWxD,WAAaiC,EAAOjC,WAE/BsD,EAAYG,OAAOC,OAAO,GAAIF,GAC9BD,GAAc,KAIhBJ,EADEI,EACa,CAACD,GAED,CAACrB,SAkDd,yBAAKzC,UAAU,YACb,yCACA,kBAAC,EAAD,CACEC,cAAeA,EACfsB,QAxCM,SAAAkB,GACdc,GAAW,GAEXI,EAAelB,IAsCPjB,WAnDS,SAACjB,EAAWC,GAC7B+C,GAAW,GACX,IAAK,IAAIY,EAAI,EAAGA,EAAIV,EAAMvD,OAAQiE,IAC5B5D,IAAckD,EAAMU,GAAG5D,WAAaC,IAAaiD,EAAMU,GAAG3D,UAC5DiD,EAAMW,OAAOD,EAAG,GAGpBR,EAAe,KA6CPC,QAASA,QClLrBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.13e4bf66.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./index.css\";\n\nconst ClientCardsData = props => {\n  return (\n    <div className=\"clientData\">\n      <div className=\"titleInfo\">\n        <div>firstName Name</div>\n        <div>Last Name</div>\n        <div>dateOfBirth</div>\n        <div>address</div>\n        <div>phone</div>\n        <div>email</div>\n\n        <div>make</div>\n        <div>model</div>\n        <div>year</div>\n        <div>vin</div>\n\n        <div>date</div>\n        <div>orderAmount</div>\n        <div>orderStatus</div>\n      </div>\n\n      {props.currentClient.length > 0 ? (\n        props.currentClient.map(user => (\n          <div key={user.id} className=\"valueInfo\">\n            <div>{user.firstName}</div>\n            <div>{user.lastName}</div>\n            <div>{user.dateOfBirth}</div>\n            <div>{user.address}</div>\n            <div>{user.phone}</div>\n            <div>{user.email}</div>\n            <div></div>\n            <div>{user.car[0].make}</div>\n            <div>{user.car[0].model}</div>\n            <div>{user.car[0].year}</div>\n            <div>{user.car[0].vin}</div>\n\n            <div>{user.car[0].order.date}</div>\n            <div>{user.car[0].order.orderAmount}</div>\n            <div>{user.car[0].order.orderStatus}</div>\n\n            <div className=\"changeCard\">\n              <button\n                onClick={() => {\n                  props.editRow(user);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => props.deleteUser(user.firstName, user.lastName)}\n                className=\"button muted-button\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))\n      ) : (\n        <div>\n          <div colSpan={3}>No users</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClientCardsData;\n","import React, { useState } from \"react\";\n\nimport \"./AddClientCard.css\";\n\nconst AddClients = props => {\n  const initialFormState = {\n    id: null,\n    firstName: \"\",\n    lastName: \"\",\n    dateOfBirth: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    car: [\n      {\n        make: \"\",\n        model: \"\",\n        year: \"\",\n        vin: \"\",\n        order: {\n          date: \"\",\n          orderAmount: \"\",\n          orderStatus: \"\"\n        }\n      }\n    ]\n  };\n  const [user, setUser] = useState(initialFormState);\n  let flagAdd = true;\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n        if (!user.firstName || !user.lastName) return;\n        props.setCurrentClient(user);\n        props.clientsList.forEach(client => {\n          if (\n            client.firstName === user.firstName &&\n            client.lastName === user.lastName\n          )\n            flagAdd = false;\n          return;\n        });\n        if (flagAdd) {\n          props.addUser(user);\n          setUser(initialFormState);\n        }\n      }}\n    >\n      <label>First Name</label>\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        value={user.firstName}\n        onChange={handleInputChange}\n      />\n      <label>Last Name</label>\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={user.lastName}\n        onChange={handleInputChange}\n      />\n      <button>Add client</button>\n      <p>\n        If the client is already in the database, his (her) individual\n        information will be shown in the \"View Card\" form.\n      </p>\n      <p className=\"example\">\n        For an example of the application, enter \"Name: Tanya\" and Last Name:\n        Brown.\n      </p>\n    </form>\n  );\n};\n\nexport default AddClients;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./EditClientCard.css\";\n\nconst EditClientCard = props => {\n  const [user, setUser] = useState(props.currentUser);\n\n  const car = user.car[0];\n  const [specificationCar, setCar] = useState(car);\n\n  const order = specificationCar.order;\n  const [characteristicOrder, setOrder] = useState(order);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleInputChangeCar = event => {\n    const { name, value } = event.target;\n\n    setCar({ ...specificationCar, [name]: value });\n    setUser(user => ({\n      ...user,\n      car: [{ ...user.car[0], [name]: value }]\n    }));\n  };\n\n  const handleInputChangeOrder = event => {\n    const { name, value } = event.target;\n\n    setOrder({ ...characteristicOrder, [name]: value });\n    setUser(user => ({\n      ...user,\n      car: [{ ...user.car[0], order: { ...user.car[0].order, [name]: value } }]\n    }));\n  };\n\n  useEffect(() => {\n    setUser(props.currentUser);\n  }, [props]);\n\n  return (\n    <form\n      className=\"editCard\"\n      onSubmit={event => {\n        event.preventDefault();\n\n        props.updateUser(user.id, user);\n      }}\n    >\n      <label>firstName</label>\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        value={user.firstName}\n        onChange={handleInputChange}\n      />\n      <label>lastName</label>\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={user.lastName}\n        onChange={handleInputChange}\n      />\n      <label>dateOfBirth</label>\n      <input\n        type=\"text\"\n        name=\"dateOfBirth\"\n        value={user.dateOfBirth}\n        onChange={handleInputChange}\n      />\n      <label>address</label>\n      <input\n        type=\"text\"\n        name=\"address\"\n        value={user.address}\n        onChange={handleInputChange}\n      />\n      <label>phone</label>\n      <input\n        type=\"text\"\n        name=\"phone\"\n        value={user.phone}\n        onChange={handleInputChange}\n      />\n      <label>email</label>\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={user.email}\n        onChange={handleInputChange}\n      />\n      <label>make</label>\n      <input\n        type=\"text\"\n        name=\"make\"\n        value={specificationCar.make}\n        onChange={handleInputChangeCar}\n      />\n      <label>model</label>\n      <input\n        type=\"text\"\n        name=\"model\"\n        value={specificationCar.model}\n        onChange={handleInputChangeCar}\n      />\n      <label>year</label>\n      <input\n        type=\"text\"\n        name=\"year\"\n        value={specificationCar.year}\n        onChange={handleInputChangeCar}\n      />\n      <label>vin</label>\n      <input\n        type=\"text\"\n        name=\"vin\"\n        value={specificationCar.vin}\n        onChange={handleInputChangeCar}\n      />\n      <label>date</label>\n      <input\n        type=\"text\"\n        name=\"date\"\n        value={characteristicOrder.date}\n        onChange={handleInputChangeOrder}\n      />\n      <label>orderAmount</label>\n      <input\n        type=\"text\"\n        name=\"orderAmount\"\n        value={characteristicOrder.orderAmount}\n        onChange={handleInputChangeOrder}\n      />\n      <label>orderStatus</label>\n      <input\n        type=\"text\"\n        name=\"orderStatus\"\n        value={characteristicOrder.orderStatus}\n        onChange={handleInputChangeOrder}\n      />\n      <ul>\n        <li>\n          <button>Update client data</button>\n        </li>\n        <li>\n          <button\n            onClick={() => props.setEditing(false)}\n            className=\"button muted-button\"\n          >\n            Cancel\n          </button>\n        </li>\n      </ul>\n    </form>\n  );\n};\n\nexport default EditClientCard;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport ClientCardsData from \"./ClientDataCards/index\";\nimport AddClients from \"./AddClients/AddClientCard\";\nimport EditClientCards from \"./AddClients/EditClientCard\";\n\nconst App = () => {\n  const usersData = [\n    {\n      id: 1,\n      firstName: \"Tania\",\n      lastName: \"Brown\",\n      dateOfBirth: \"21.09.1984\",\n      address: \"Minsk\",\n      phone: \"+123456789\",\n      email: \"123@tut.by\",\n      car: [\n        {\n          make: \"Honda\",\n          model: \"Civic\",\n          year: \"2015\",\n          vin: \"123456789\",\n          order: {\n            date: \"21.09.2019\",\n            orderAmount: \"100\",\n            orderStatus: \"complied\"\n          }\n        }\n      ]\n    },\n    {\n      id: 2,\n      firstName: \"Tania2\",\n      lastName: \"Brown\",\n      dateOfBirth: \"21.09.1984\",\n      address: \"Minsk\",\n      phone: \"+123456789\",\n      email: \"123@tut.by\",\n      car: [\n        {\n          make: \"Honda\",\n          model: \"Civic\",\n          year: \"2015\",\n          vin: \"123456789\",\n          order: {\n            date: \"21.09.2019\",\n            orderAmount: \"100\",\n            orderStatus: \"complied\"\n          }\n        }\n      ]\n    },\n    {\n      id: 3,\n      firstName: \"Tania3\",\n      lastName: \"Brown\",\n      dateOfBirth: \"21.09.1984\",\n      address: \"Minsk\",\n      phone: \"+123456789\",\n      email: \"123@tut.by\",\n      car: [\n        {\n          make: \"Honda\",\n          model: \"Civic\",\n          year: \"2015\",\n          vin: \"123456789\",\n          order: {\n            date: \"21.09.2019\",\n            orderAmount: \"100\",\n            orderStatus: \"complied\"\n          }\n        }\n      ]\n    }\n  ];\n\n  const [users, setUsers] = useState(usersData);\n\n  const addUser = user => {\n    user.id = users.length + 1;\n    setUsers([...users, user]);\n  };\n\n  const currentInputClient = {\n    id: null,\n    firstName: \"\",\n    lastName: \"\",\n    dateOfBirth: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    car: [\n      {\n        make: \"\",\n        model: \"\",\n        year: \"\",\n        vin: \"\",\n        order: {\n          date: \"\",\n          orderAmount: \"\",\n          orderStatus: \"\"\n        }\n      }\n    ]\n  };\n\n  const [currentClient, setCurrentUser] = useState([currentInputClient]);\n\n  const [editing, setEditing] = useState(false);\n\n  const compareDataClients = client => {\n    let clientNew = {};\n\n    let flagCompare = false;\n\n    users.forEach(clientData => {\n      if (\n        clientData.firstName === client.firstName &&\n        clientData.lastName === client.lastName\n      ) {\n        clientNew = Object.assign({}, clientData);\n        flagCompare = true;\n      }\n    });\n    if (flagCompare) {\n      setCurrentUser([clientNew]);\n    } else {\n      setCurrentUser([client]);\n    }\n  };\n\n  const deleteUser = (firstName, lastName) => {\n    setEditing(false);\n    for (let i = 0; i < users.length; i++) {\n      if (firstName === users[i].firstName && lastName === users[i].lastName) {\n        users.splice(i, 1);\n      }\n    }\n    setCurrentUser({});\n  };\n\n  const editRow = client => {\n    setEditing(true);\n\n    setCurrentUser(client);\n  };\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false);\n    setUsers(users.map(user => (user.id === id ? updatedUser : user)));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">InteticsLab 2019</h1>\n      <div className=\"main\">\n        <div className=\"rulerData\">\n          {editing ? (\n            <div>\n              <h2>Edit client</h2>\n              <EditClientCards\n                setEditing={setEditing}\n                currentUser={currentClient}\n                updateUser={updateUser}\n              />\n            </div>\n          ) : (\n            <div>\n              <h2>Add client</h2>\n              <AddClients\n                addUser={addUser}\n                clientsList={users}\n                setCurrentClient={compareDataClients}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"viewData\">\n          <h2>View card</h2>\n          <ClientCardsData\n            currentClient={currentClient}\n            editRow={editRow}\n            deleteUser={deleteUser}\n            editing={editing}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}